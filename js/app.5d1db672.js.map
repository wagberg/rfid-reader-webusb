{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/plugins/vuetify.ts","webpack:///./src/App.vue","webpack:///./src/components/RfidReader.vue","webpack:///./src/composables/rfid/Interfaces.ts","webpack:///./src/composables/rfid/pl2303.ts","webpack:///./src/composables/rfid/Errors.ts","webpack:///./src/composables/rfid/Comands.ts","webpack:///./src/composables/rfid/Transformers.ts","webpack:///./src/composables/rfid/Tag.ts","webpack:///./src/composables/rfid/Semaphore.ts","webpack:///./src/composables/rfid/Reader.ts","webpack:///./src/components/RfidReader.vue?5782","webpack:///./src/components/RfidReader.vue?10d2","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","components","directives","class","cols","connected","webSerialSupported","connectSerial","left","webUsbSupported","connectUsb","disconnect","tag","readTag","disabled","writeTag","toggleSound","soundIcon","snackbarText","LedColor","ReturnStatus","device","onError","this","device_","onError_","chunk","controller","send","status","error","toString","read","buffer","Uint8Array","byteOffset","byteLength","enqueue","readable_","writable_","opened","ReadableStream","WritableStream","baudRate","open","selectConfiguration","undefined","configuration","Error","claimInterface","interfaces","interfaceNumber","vendorRead","vendorWrite","setBaudRate","controlTransferIn","recipient","requestType","request","index","currentConfiguration","baudRateConfiguration","DataView","setInt32","setInt8","controlTransferOut","numberOfBytes","endpointNumber","transferIn","dataAsBytes","transferOut","close","message","opCode","requestData","set","byte","RFIDFrame","checksum","v","reduce","prev","curr","duration","RangeError","color","opcode","locked","lock","response","TransformStream","bufferPointer","currentDataLength","frame","fill","Array","from","every","padStart","max","counter","waiting","promise","resolve","Promise","err","take","unresolved","forEach","cb","acuire","release","port","connected_","semaphore","RfidReader","validateReader","isValidReader","DOMException","console","readable","pipeThrough","writable","cancel","code","abort","writeFrame","time","playSound","OK","NoToken","setLedColor","GREEN","beep","RED","tagWritten","equals","setInterval","NONE","TextDecoder","decode","writer","getWriter","ready","write","releaseLock","reader","getReader","done","with","f","writeRaw","readRaw","getModelInfo","id","productId","vendorId","setup","rfid","navigator","snackbar","connectedString","connect","isConnected","usb","requestDevice","filters","addEventListener","serial","requestPort","usbVendorId","usbProductId","render","App","use","vuetify","mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,uBAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,oMCjJM,iBAAc,CAC3ByC,aACAC,e,wICPA,eAIQ,Q,wBAHN,iBAES,CAFT,eAES,Q,wBADP,iBAAa,CAAb,eAAa,O,sBCCX,eAAa,UAAT,QAAI,G,EACR,eAAmC,SAAhC,gCAA4B,G,iBAEhB,mB,iBAAwB,oB,iBAIxB,W,iBAAgB,iB,iBAG0B,c,GAKtDC,MAAM,4B,iBAKmD,c,iBAGE,e,EAG9D,eAAI,mB,EAIJ,eAAI,mB,GACDA,MAAM,W,6LAlCf,eAqCc,Q,wBApCZ,iBAcQ,CAdR,eAcQ,GAdDA,MAAM,eAAa,C,wBACxB,iBAYQ,CAZR,eAYQ,GAZDC,KAAK,MAAI,C,wBACd,iBAAa,CAAb,EACA,GACkD,EAAAC,WAAa,EAAAC,oB,iBAA/D,eAGQ,G,MAHDH,MAAM,OAAQ,QAAO,EAAAI,e,yBAC1B,iBAAqC,CAArC,eAAqC,GAA7BC,KAAA,IAAI,C,wBAAC,iBAAe,C,8DAGiB,EAAAH,WAAa,EAAAI,iB,iBAA5D,eAGQ,G,MAHDN,MAAM,OAAQ,QAAO,EAAAO,Y,yBAC1B,iBAA6B,CAA7B,eAA6B,GAArBF,KAAA,IAAI,C,wBAAC,iBAAO,C,6DAGwB,EAAAH,W,iBAA9C,eAA2E,G,MAApEF,MAAM,OAAQ,QAAO,EAAAQ,Y,yBAA6B,iBAAU,C,qEAGvE,eAIQ,GAJDR,MAAM,eAAa,C,wBACxB,iBAEQ,CAFR,eAEQ,GAFDC,KAAK,MAAI,C,wBACd,iBAAiD,CAAjD,eAAiD,IAAjD,EAAiD,eAAV,EAAAQ,KAAG,O,gBAG9C,eAeQ,GAfDT,MAAM,eAAa,C,wBACxB,iBAaQ,CAbR,eAaQ,GAbDC,KAAK,MAAI,C,wBACd,iBAEQ,CAFR,eAEQ,GAFDD,MAAM,OAAQ,QAAO,EAAAU,QAAUC,UAAW,EAAAT,W,yBAAW,iBAE5D,C,qCACA,eAEQ,GAFDF,MAAM,OAAS,QAAO,EAAAY,SAAWD,UAAW,EAAAT,W,yBAAW,iBAE9D,C,qCACA,EACA,eAEQ,GAFDF,MAAM,OAAQ,QAAO,EAAAa,a,yBAC1B,iBAAgC,CAAhC,eAAgC,Q,wBAAxB,iBAAe,C,8BAAZ,EAAAC,WAAS,O,8BAEtB,EACA,eAAyC,IAAzC,EAAyC,eAAnB,EAAAC,cAAY,O,8BClCxBC,EAMAC,E,0DCSZ,G,+QAMJ,WAAYC,EAA4BC,GAAmB,uBACzDC,KAAKC,QAAUH,EACfE,KAAKE,SAAWH,E,qGAGlB,WACEI,EACAC,GAFF,gHAKyBJ,KAAKC,QAAQI,KAAKF,GAL3C,OAKUjE,EALV,OAM0B,OAAlBA,EAAOoE,SACTF,EAAWG,MAAMrE,EAAOoE,QACxBN,KAAKE,YARX,mDAWIE,EAAWG,MAAM,KAAMC,YACvBR,KAAKE,WAZT,yD,oEAiBI,E,WAMJ,WAAYJ,EAA4BC,GAAmB,uBACzDC,KAAKC,QAAUH,EACfE,KAAKE,SAAWH,E,2CAGlB,SAAKK,GAAuD,WAC1D,wCAAC,iIAEwB,EAAKH,QAAQQ,KAAK,KAF1C,OAESvE,EAFT,OAGyB,OAAlBA,EAAOoE,SACTF,EAAWG,MAAX,qBAA+BrE,EAAOoE,SACtC,EAAKJ,YAEP,UAAIhE,EAAOrB,YAAX,OAAI,EAAa6F,SACTP,EAAQ,IAAIQ,WAChBzE,EAAOrB,KAAK6F,OAAQxE,EAAOrB,KAAK+F,WAChC1E,EAAOrB,KAAKgG,YAEdT,EAAWU,QAAQX,IAZxB,mDAeGC,EAAWG,MAAM,KAAMC,YACvB,EAAKN,WAhBR,wDAAD,O,KAsBiB,E,WAOnB,WAAYJ,GAAiB,uBAJ7B,KAAAiB,UAA+C,KAE/C,KAAAC,UAA+C,KAG7ChB,KAAKC,QAAUH,E,6CAGjB,WAAmB,WAMjB,OALKE,KAAKe,WAAaf,KAAKC,QAAQgB,SAClCjB,KAAKe,UAAY,IAAIG,eACnB,IAAI,EAAuBlB,MAAM,WAAQ,EAAKe,UAAY,UAGvDf,KAAKe,Y,oBAGd,WAAmB,WASjB,OARKf,KAAKgB,WAAahB,KAAKC,QAAQgB,SAClCjB,KAAKgB,UAAY,IAAIG,eACnB,IAAI,EACFnB,MACA,WAAQ,EAAKgB,UAAY,UAIxBhB,KAAKgB,Y,2EAGd,kHAAaI,gBAAb,MAAwB,MAAxB,WACQpB,KAAKC,QAAQoB,OADrB,uBAEQrB,KAAKC,QAAQqB,oBAAoB,GAFzC,eAGqCC,IAA/BvB,KAAKC,QAAQuB,cAHnB,sBAGsD,IAAIC,MAAM,SAHhE,uBAIQzB,KAAKC,QAAQyB,eACjB1B,KAAKC,QAAQuB,cAAcG,WAAW,GAAGC,iBAL7C,wBAQQ5B,KAAK6B,WAAW,MAAQ,GARhC,yBASQ7B,KAAK8B,YAAY,KAAQ,GATjC,yBAUQ9B,KAAK6B,WAAW,MAAQ,GAVhC,yBAWQ7B,KAAK6B,WAAW,MAAQ,GAXhC,yBAYQ7B,KAAK6B,WAAW,MAAQ,GAZhC,yBAaQ7B,KAAK8B,YAAY,KAAQ,GAbjC,yBAcQ9B,KAAK6B,WAAW,MAAQ,GAdhC,yBAeQ7B,KAAK6B,WAAW,MAAQ,GAfhC,yBAgBQ7B,KAAK8B,YAAY,EAAG,GAhB5B,yBAiBQ9B,KAAK8B,YAAY,EAAG,GAjB5B,yBAkBQ9B,KAAK8B,YAAY,EAAG,IAlB5B,yBAmBQ9B,KAAK+B,YAAYX,GAnBzB,yBAoBQpB,KAAK8B,YAAY,EAAK,GApB9B,yBAqBQ9B,KAAK8B,YAAY,EAAG,GArB5B,yBAsBQ9B,KAAK8B,YAAY,EAAG,GAtB5B,iD,4IAyBA,WAAkBV,GAAlB,yGACqCpB,KAAKC,QAAQ+B,kBAC9C,CACEC,UAAW,YACXC,YAAa,QACbC,QAAS,GACTzE,MAAO,EACP0E,MAAO,GAET,GATJ,UACQC,EADR,YAYoCd,IAA9Bc,EAAqBxH,KAZ3B,sBAYqD,IAAI4G,MAAM,SAZ/D,cAaQa,EAAwB,IAAIC,SAChCF,EAAqBxH,KAAK6F,QAE5B4B,EAAsBE,SAAS,EAAGpB,GAAU,GAC5CkB,EAAsBG,QAAQ,EAAG,GACjCH,EAAsBG,QAAQ,EAAG,GACjCH,EAAsBG,QAAQ,EAAG,GAnBnC,UAqBQzC,KAAKC,QAAQyC,mBACjB,CACET,UAAW,YACXC,YAAa,QACbC,QAAS,GACTzE,MAAO,EACP0E,MAAO,GAETE,EAAsB5B,QA7B1B,iD,2IAiCA,WAAiBhD,EAAe0E,GAAhC,0GACSpC,KAAKC,QAAQ+B,kBAClB,CACEE,YAAa,SACbD,UAAW,SACXE,QAAS,EACTzE,QACA0E,SAEF,IATJ,gD,8IAaA,WAAkB1E,EAAe0E,GAAjC,0GACSpC,KAAKC,QAAQyC,mBAAmB,CACrCR,YAAa,SACbD,UAAW,SACXE,QAAS,EACTzE,QACA0E,WANJ,gD,uIAUA,WAAWO,GAAX,0GAAkCC,EAAlC,+BAAmD,EAAnD,kBACS5C,KAAKC,QAAQ4C,WAAWD,EAAgBD,IADjD,gD,qIAIA,WAAWG,GAAX,0GAAsCF,EAAtC,+BAAuD,EAAvD,kBACS5C,KAAKC,QAAQ8C,YAAYH,EAAgBE,IADlD,gD,sIAIA,uHACS9C,KAAKC,QAAQ+C,SADtB,gD,sICtMW,EAAb,wDACE,WAAYC,GAAe,oCACzB,cAAMA,GACN,EAAKhG,KAAO,YAFa,EAD7B,yBAA+BwE,QAOlB,EAAb,wDACE,WAAYwB,GAAe,oCACzB,cAAMA,GACN,EAAKhG,KAAO,UAFa,EAD7B,UAA6B,GAOhB,EAAb,wDACE,WAAYgG,GAAe,oCACzB,cAAMA,GACN,EAAKhG,KAAO,gBAFa,EAD7B,UAAmC,GAOtB,EAAb,wDACE,WAAYgG,GAAe,oCACzB,cAAMA,GACN,EAAKhG,KAAO,WAFa,EAD7B,UAA8B,GAOjB,EAAb,wDACE,aAAsC,MAA1BgG,EAA0B,uDAAhB,iBAAgB,8BACpC,cAAMA,GACN,EAAKhG,KAAO,aAFwB,EADxC,UAAgC,GAOnB,EAAb,wDACE,aAAoD,MAAxCgG,EAAwC,uDAA9B,+BAA8B,8BAClD,cAAMA,GACN,EAAKhG,KAAO,eAFsC,EADtD,UAAkC,GC5BrB,G,4DAOX,WAAYiG,EAAoB5C,EAAgBzF,GAAgB,uBAC9DmF,KAAKkD,OAASA,EACdlD,KAAKM,OAASA,EACdN,KAAKnF,KAAOA,IAIM,EAAtB,WAOE,WAAYoC,EAAciG,GAA+C,IAAxBrI,EAAwB,uDAAF,GAAE,uBAFjE,KAAAsI,YAA0B,IAAIxC,WAGpCX,KAAK/C,KAAOA,EACZ+C,KAAKkD,OAAS,IAAIvC,WAAWuC,GAC7BlD,KAAKmD,YAAc,IAAIxC,WAAW9F,GAVtC,4CAiBS,WACL,IAAM6F,EAAS,IAAIC,WAAW,KAC9BD,EAAO0C,IAAIpD,KAAKkD,QAEhB,IADA,IAAI/H,EAAI,EACCkB,EAAI,EAAGA,EAAI2D,KAAKmD,YAAY9H,OAAQgB,IAAK,CAChD,IAAMgH,EAAOrD,KAAKmD,YAAY9G,GAC9BqE,EAAOvF,KAAOkI,EACD,MAATA,IACF3C,EAAOvF,KAAO,KAIlB,OADAuF,EAAOvF,KAAOmI,EAAUC,SAAS7C,EAAOjC,MAAM,EAAGtD,IAC1CuF,EAAOjC,MAAM,EAAGtD,MA7B3B,uBAaE,SAAgBqI,GACd,OAAOA,EAAEC,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAM,OAdjD,KAoCa,EAAb,wDACE,uDACQ,aAAc,CAAC,EAAM,IAF/B,UAA+B,GASlB,EAAb,wDAIE,aAAwB,IAAZC,EAAY,uDAAD,EACrB,GADsB,uBAClBA,EAAW,KAAOA,EAAW,EAC/B,MAAM,IAAIC,WAAJ,kDAA0DD,EAA1D,MAFc,mBAIhB,OAAQ,CAAC,EAAM,GAAO,CAACA,IARjC,UAA0B,GAeb,EAAb,wDAIE,WAAYE,GAAe,0CACnB,gBAAiB,CAAC,EAAM,GAAO,CAACA,IAL1C,UAAiC,GAYpB,EAAb,wDACE,uDACQ,WAAY,CAAC,EAAM,KAF7B,UAA6B,GASd,E,wDAKb,WAAY7G,EAAcoC,EAAU0E,GAAqC,MAAdC,EAAc,+EACvE,IAAMC,EAAOD,EAAS,EAAO,EAD0C,OAEvE,cAAM/G,EAAM8G,EAAZ,CAAqBE,GAArB,sBAA8B5E,EAAIA,SAClC,EAAKA,IAAMA,EACX,EAAK2E,OAASA,EAJyD,E,UAL3C,GAgBnB,EAAb,wDAKE,WAAY3E,GAAwB,IAAd2E,EAAc,kGAC5B,cAAe3E,EAAK,CAAC,EAAM,IAAO2E,GAN5C,UAA+B,GAalB,EAAb,wDAKE,WAAY3E,GAAwB,IAAd2E,EAAc,kGAC5B,cAAe3E,EAAK,CAAC,EAAM,IAAO2E,GAN5C,UAA+B,GC3HlB,EAAb,2KAEE,SACE7D,EACAC,GAEA,IAAM8C,EAAS/C,EAAM1B,MAAM,EAAG,GACxB6B,EAASH,EAAM,GACftF,EAAOsF,EAAM1B,MAAM,GAAI,GAE7B,GAAqD,IAAjD0B,EAAMsD,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAM,GAC5C,MAAM,IAAI,EAAc,0BAE1B,IAAMO,EAAW,IAAI,EAAahB,EAAQ5C,EAAQzF,GAClDuF,EAAWU,QAAQoD,OAdvB,GAAiCC,iBAqBpB,EAAb,yG,0BACU,EAAAzD,OAAS,IAAIC,WAAW,KAExB,EAAAyD,cAAgB,EAEhB,EAAAC,mBAAqB,EAL/B,2GAOE,WACElE,EACAC,GAFF,8FAKEJ,KAAKU,OAAO0C,IAAIjD,EAAOH,KAAKoE,eAC5BpE,KAAKoE,eAAiBjE,EAAM9E,UAGI,IAA5B2E,KAAKqE,mBAA4BrE,KAAKoE,eAAiB,GAT7D,mBAU2B,MAAnBpE,KAAKU,OAAO,IAAkC,MAAnBV,KAAKU,OAAO,GAV/C,sBAWY,IAAI,EAAJ,qEAA0EV,KAAKU,OAAOjC,MAAM,EAAG,KAX3G,OAaIuB,KAAKqE,kBAAoB,IAAMrE,KAAKU,OAAO,GAAKV,KAAKU,OAAO,GAAK,EAbrE,OAgBE,IAAgC,IAA5BV,KAAKqE,mBAA4BrE,KAAKoE,eAAiBpE,KAAKqE,kBAAmB,CAG3EC,EAAQ,GACVjI,EAAI,EACR,MAAOA,EAAI2D,KAAKqE,kBACRhB,EAAOrD,KAAKU,OAAOrE,KACzBiI,EAAM3I,KAAK0H,GACE,MAATA,GAAoC,IAAnBrD,KAAKU,OAAOrE,IAAaA,IAEhD+D,EAAWU,QAAQ,IAAIH,WAAW2D,IAElCtE,KAAKU,OAAO0C,IAAIpD,KAAKU,OAAOjC,MAAMuB,KAAKqE,oBACvCrE,KAAKU,OAAO6D,KAAK,EAAGvE,KAAKqE,mBACzBrE,KAAKoE,eAAiBpE,KAAKqE,kBAC3BrE,KAAKqE,mBAAqB,EA/B9B,gDAPF,+EA0CE,SAAMjE,GACJA,EAAWU,QAAQd,KAAKU,OAAOjC,MAAM,EAAGuB,KAAKoE,oBA3CjD,GAAmCD,iBA+CSA,gBASAA,iBJrF5C,SAAkBvE,GACd,sBACA,oBACA,yBAHJ,CAAkBA,MAAQ,KAM1B,SAAkBC,GACd,kBACA,4BACA,gCACA,kCAJJ,CAAkBA,MAAY,K,wBKLT,E,WAGnB,aAA4E,IAAhER,EAAgE,uDAA9B,CAAC,EAAM,EAAM,EAAM,EAAM,GACrE,GAD0E,uBACvD,IAAfA,EAAIhE,OAAc,MAAM,IAAI,EAAJ,4CAAkDgE,EAAIhE,SAClF2E,KAAKnF,KAAO2J,MAAMC,KAAKpF,G,0CAGzB,WACE,OAAOW,KAAKnF,KAAK4D,U,kBAGnB,WACE,OAAOuB,KAAKnF,KAAKQ,S,oBAGnB,SAAOgE,GACL,OACEA,EAAIhE,SAAW2E,KAAK3E,QACjB2E,KAAKnF,KAAK6J,OAAM,SAAChH,EAAO0E,GAAR,OAAkB1E,IAAU2B,EAAIxE,KAAKuH,Q,sBAI5D,WACE,OAAOpC,KAAKnF,KAAK4I,QAAO,SAAChH,EAAG4G,GAAJ,gBAAgB5G,EAAhB,YAAqB4G,EAAK7C,SAAS,IAAImE,SAAS,EAAG,QAAQ,Q,KC1BlE,G,qBAenB,aAAmB,IAAPC,EAAO,uDAAD,EAAC,uBAXX,KAAAC,QAAU,EAKV,KAAAC,QAE8B,GAKpC9E,KAAK4E,IAAMA,E,2CAGb,WACE,GAAI5E,KAAK8E,QAAQzJ,OAAS,GAAK2E,KAAK6E,QAAU7E,KAAK4E,IAAK,CACtD5E,KAAK6E,SAAW,EAChB,IAAME,EAAU/E,KAAK8E,QAAQhJ,QACzBiJ,GAASA,EAAQC,a,oBAIzB,WAAM,WACJ,GAAIhF,KAAK6E,QAAU7E,KAAK4E,IAAK,CAC3B5E,KAAK6E,SAAW,EAChB,IAAME,EAAU,IAAIE,SAAc,SAACD,GAAcA,OACjD,OAAOD,EAET,OAAO,IAAIE,SAAc,SAACD,EAASE,GAAU,EAAKJ,QAAQnJ,KAAK,CAAEqJ,UAASE,a,qBAG5E,WACElF,KAAK6E,SAAW,EAChB7E,KAAKmF,S,mBAOP,WACE,IAAMC,EAAapF,KAAK8E,QAAQzJ,OAQhC,OANA2E,KAAK8E,QAAQO,SAAQ,SAACN,GACpBA,EAAQG,IAAI,2BAEdlF,KAAK6E,QAAU,EACf7E,KAAK8E,QAAU,GAERM,I,2EAGT,WAAcE,GAAd,iGACQtF,KAAKuF,SADb,yCAGWD,KAHX,uBAKItF,KAAKwF,UALT,uE,kECvCmB,G,WAiBnB,WAAYC,GAAa,uBAdjB,KAAAC,YAAa,EAEb,KAAA1E,UAA+C,KAE/C,KAAAD,UAAiD,KAEjD,KAAA4E,UAAY,IAAI,EAAU,GAShC3F,KAAKyF,KAAOA,E,uGAGP,6HAEGzF,KAAKyF,KAAKpE,KAAK,CAAED,SAAUwE,EAAWxE,WAFzC,uBAGyBpB,KAAK6F,iBAH9B,UAGGC,EAHH,QAICA,EAJD,iBAKD9F,KAAK0F,YAAa,EALjB,8BAOK,IAAI,EAAU,wCAPnB,kEAUC,gBAAiBK,cAVlB,oCAaHC,QAAQzF,MAAR,MACAP,KAAKyF,KAAKzC,QAdP,0D,gFAkBP,WACE,OAAOhD,KAAK0F,a,oBAGd,WAME,OALK1F,KAAKe,WAAaf,KAAKyF,KAAKQ,WAC/BjG,KAAKe,UAAYf,KAAKyF,KAAKQ,SACxBC,YAAY,IAAI/B,gBAAgB,IAAI,IACpC+B,YAAY,IAAI/B,gBAAgB,IAAI,KAElCnE,KAAKe,Y,oBAGd,WAIE,OAHKf,KAAKgB,WAAahB,KAAKyF,KAAKU,WAC/BnG,KAAKgB,UAAYhB,KAAKyF,KAAKU,UAEtBnG,KAAKgB,Y,iFAGP,kGACDhB,KAAKe,UADJ,0CAGKf,KAAKe,UAAUqF,OAAO,iBAH3B,+DAKG,gBAAaL,cAA2B,KAAX,KAAEM,MALlC,iBAMCL,QAAQzF,MAAM,KAAE0C,SANjB,+CAYDjD,KAAKgB,UAZJ,4CAcKhB,KAAKgB,UAAUsF,MAAM,iBAd1B,8DAgBDN,QAAQzF,MAAR,MAhBC,yBAmBCP,KAAKyF,KAAKzC,QAnBX,QAoBLhD,KAAK0F,YAAa,EApBb,iE,2IA4BC,WAAkB5B,GAAlB,yGACmB9D,KAAKuG,WAAW,IAAI,EAAYzC,IADnD,uBACExD,EADF,EACEA,OADF,kBAECA,GAFD,gD,qIAUA,WAAWkG,GAAX,yGACmBxG,KAAKuG,WAAW,IAAI,EAAKC,IAD5C,uBACElG,EADF,EACEA,OADF,kBAECA,GAFD,gD,wIAUD,6HAAcmG,EAAd,yCAC0BzG,KAAKuG,WAAW,IAAI,GAD9C,gBACGjG,EADH,EACGA,OAAQzF,EADX,EACWA,KADX,KAEGyF,EAFH,cAGET,EAAa6G,GAHf,SAQE7G,EAAa8G,QARf,oCAIK3G,KAAK4G,YAAYhH,EAASiH,OAJ/B,YAKGJ,EALH,kCAKoBzG,KAAK8G,KAAK,GAL9B,iCAOM,IAAI,EAAIjM,IAPd,yBASKmF,KAAK4G,YAAYhH,EAASmH,KAT/B,YAUGN,EAVH,kCAUoBzG,KAAK8G,KAAK,IAV9B,cAYK,IAAI,EAZT,cAcK,IAAI,EAdT,iD,wIAwBA,WAAezH,GAAf,yHAAyBoH,EAAzB,yCAGezG,KAAKuG,WAAW,IAAI,EAAUlH,IAH7C,mBAGFiB,EAHE,EAGFA,OACCA,IAAWT,EAAa6G,GAJvB,sBAIiC,IAAI,EAAU,6BAJ/C,uBAKc1G,KAAKV,SAAQ,GAL3B,UAKL0H,EALK,QAMDA,EAAWC,OAAO5H,GANjB,kCAOGW,KAAK4G,YAAYhH,EAASiH,OAP7B,YAQCJ,EARD,kCAQkBzG,KAAK8G,KAAK,GAR5B,eASHI,aAAY,kBAAM,EAAKN,YAAYhH,EAASuH,QAAO,KAThD,4CAYenH,KAAKuG,WAAW,IAAI,EAAUlH,IAZ7C,oBAYFiB,EAZE,EAYFA,OACCA,IAAWT,EAAa6G,GAbvB,uBAaiC,IAAI,EAAU,aAb/C,yBAcc1G,KAAKV,SAAQ,GAd3B,WAcL0H,EAdK,QAeDA,EAAWC,OAAO5H,GAfjB,kCAgBGW,KAAK4G,YAAYhH,EAASiH,OAhB7B,YAiBCJ,EAjBD,kCAiBkBzG,KAAK8G,KAAK,GAjB5B,eAkBHI,aAAY,kBAAM,EAAKN,YAAYhH,EAASuH,QAAO,KAlBhD,4CAqBCnH,KAAK4G,YAAYhH,EAASmH,KArB3B,YAsBDN,EAtBC,kCAsBgBzG,KAAK8G,KAAK,IAtB1B,QAuBLI,aAAY,kBAAM,EAAKN,YAAYhH,EAASuH,QAAO,KAvB9C,iD,6IA8BA,sHACkBnH,KAAKuG,WAAW,IAAI,GADtC,uBACG1L,EADH,EACGA,KADH,mBAEE,IAAIuM,aAAcC,OAAOxM,IAF3B,gD,wIASC,WAAeA,GAAf,0FACe,MAAjBmF,KAAKmG,SADH,sBAC2B,IAAI,EAAU,kBADzC,cAEAmB,EAAStH,KAAKmG,SAASoB,YAFvB,SAGAD,EAAOE,MAHP,gCAKEF,EAAOG,MAAM9G,WAAW8D,KAAK5J,IAL/B,uBAOJyM,EAAOI,cAPH,yE,wIAeA,6GACe,MAAjB1H,KAAKiG,SADH,sBAC2B,IAAI,EAAU,kBADzC,cAEA0B,EAAS3H,KAAKiG,SAAS2B,YAFvB,kBAI0BD,EAAOlH,OAJjC,mBAIIoH,EAJJ,EAIIA,KAAMnK,EAJV,EAIUA,OACVmK,QAAkBtG,IAAV7D,EALR,uBAKmC,IAAI,EAAU,mCALjD,iCAMGA,GANH,yBAQJiK,EAAOD,cARH,2E,0IAkBD,WAAiBpD,GAAjB,qHACEtE,KAAK2F,UAAUmC,KAAf,wCAAoB,6GACnBC,EAAIzD,EAAMA,QADS,SAEnB,EAAK0D,SAASrH,WAAW8D,KAAX,CAAiB,IAAM,IAAM,EAAMsD,EAAE1M,QAArC,sBAAgD0M,MAF3C,uBAGL,EAAKE,UAHA,cAGnBvK,EAHmB,yBAIlBA,GAJkB,6CADtB,gD,+IAaC,oHACWsC,KAAKkI,eADhB,cACAC,EADA,yBAES,4BAAPA,GAFF,gD,gEA7MO,GAAA/G,SAAW,MAEnB,GAAAgH,UAAY,KAEZ,GAAAC,SAAW,KCvBL,sBAAgB,CAC7BC,MAD6B,WAE3B,IAYIC,EAZErJ,EAAkB,eAAI,QAASsJ,WAC/BzJ,EAAqB,eAAI,WAAYyJ,WAErCC,EAAW,gBAAI,GACf9I,EAAe,eAAI,IAEnB8G,EAAY,gBAAI,GAChBhH,EAAc,WAClBgH,EAAU/I,OAAS+I,EAAU/I,OAEzBgC,EAAY,gBAAS,kBAAO+G,EAAU/I,MAAQ,WAAa,kBAG3DoB,EAAY,gBAAI,GAChBO,EAAM,eAAI,IAAI,GACdqJ,EAAkB,gBAAS,kBAAO5J,EAAUpB,MAAQ,YAAc,mBAElEiL,EAAO,yDAAG,WAAOlD,GAAP,wFACd8C,EAAO,IAAI,GAAW9C,GADR,SAER8C,EAAKI,UAFG,OAGd7J,EAAUpB,MAAQ6K,EAAKK,YAHT,2CAAH,sDAMPxJ,EAAU,yDAAG,8GACXmJ,EAAKnJ,aADM,OAEjBN,EAAUpB,OAAQ,EAFD,2CAAH,qDAKVyB,EAAU,yDAAG,+HAEMqJ,UAAUK,IAAIC,cACjC,CAAEC,QAAS,CAAC,CAAEV,SAAU,GAAWA,SAAUD,UAAW,GAAWA,cAHtD,cAETtI,EAFS,OAKT2F,EAAO,IAAI,EAAmB3F,GALrB,SAMT6I,EAAQlD,GANC,6DAQA,IAAX,KAAEY,KARS,wBASbL,QAAQzF,MAAM,KAAE0C,SATH,8BAYA,KAAX,KAAEoD,KAZS,wBAabL,QAAQzF,MAAM,KAAE0C,SAbH,iCAgBf+C,QAAQzF,MAAM,KAAE8F,KAAM,KAAEpJ,KAAM,KAAEgG,SAhBjB,aAmBjBuF,UAAUK,IAAIG,iBAAiB,aAAc5J,GAnB5B,yDAAH,qDAsBVJ,EAAa,yDAAG,6HAECwJ,UAAUS,OAAOC,YAClC,CAAEH,QAAS,CAAC,CAAEI,YAAa,GAAWd,SAAUe,aAAc,GAAWhB,cAHzD,OAEZ3C,EAFY,OAKlBkD,EAAQlD,GACRA,EAAKuD,iBAAiB,aAAc5J,GANlB,wDAQd,gBAAa2G,cAA2B,IAAX,KAAEM,MARjB,wBAShBL,QAAQzF,MAAM,KAAE0C,SATA,+FAAH,qDAgBb3D,EAAO,yDAAG,uHAEMiJ,EAAKjJ,QAAQmH,EAAU/I,OAF7B,OAEZ2B,EAAI3B,MAFQ,OAGZ+K,EAAS/K,OAAQ,EACjBiC,EAAajC,MAAQ,GAJT,wDAMR,gBAAa,GANL,wBAOV+K,EAAS/K,OAAQ,EACjBiC,EAAajC,MAAQ,kBARX,2BAWR,gBAAa,IACf+K,EAAS/K,OAAQ,EACjBiC,EAAajC,MAAQ,2BAbX,yDAAH,qDAkBP8B,EAAQ,yDAAG,8GACT+I,EAAK/I,SAASH,EAAI3B,MAAO+I,EAAU/I,OAD1B,2CAAH,qDAId,MAAO,CACLgL,kBACA5J,YACA2H,YACA/G,YACAL,MACAH,kBACAH,qBACA0J,WACA9I,eACAL,UACAG,cACAD,WACAR,gBACAG,aACAC,iBChHN,GAAOiK,OAAS,EAED,UCDA,kBAAgB,CAC7BpM,KAAM,MAENyB,WAAY,CACVkH,WAAA,IAGF/K,KAP6B,WAQ3B,MAAO,MCTX,GAAOwO,OAASA,EAED,UCDf,eAAUC,IACPC,IAAIC,GACJC,MAAM","file":"js/app.5d1db672.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/rfid-reader-webusb/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import '@mdi/font/css/materialdesignicons.css';\nimport 'vuetify/lib/styles/main.sass';\nimport { createVuetify } from 'vuetify';\nimport * as components from 'vuetify/lib/components';\nimport * as directives from 'vuetify/lib/directives';\n\nexport default createVuetify({\n  components,\n  directives,\n});\n","<template>\n  <v-app>\n    <v-main>\n      <RfidReader/>\n    </v-main>\n  </v-app>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport RfidReader from '@/components/RfidReader.vue';\n\nexport default defineComponent({\n  name: 'App',\n\n  components: {\n    RfidReader,\n  },\n\n  data() {\n    return {\n      //\n    };\n  },\n});\n</script>\n","<template>\n  <v-container>\n    <v-row class=\"text-center\">\n      <v-col cols=\"12\">\n        <h1>RFID</h1>\n        <p>Connect to an LF RFID reader</p>\n        <v-btn class=\"ma-2\" @click=\"connectSerial\" v-if=\"!connected && webSerialSupported\">\n          <v-icon left>mdi-serial-port</v-icon>\n          Connect serial\n        </v-btn>\n        <v-btn class=\"ma-2\" @click=\"connectUsb\" v-if=\"!connected && webUsbSupported\">\n          <v-icon left>mdi-usb</v-icon>\n          Connect USB\n        </v-btn>\n        <v-btn class=\"ma-2\" @click=\"disconnect\" v-if=\"connected\">Disconnect</v-btn>\n      </v-col>\n    </v-row>\n    <v-row class=\"text-center\">\n      <v-col cols=\"12\">\n        <p class=\"text-h4 font-weight-bold\">{{ tag }}</p>\n      </v-col>\n    </v-row>\n    <v-row class=\"text-center\">\n      <v-col cols=\"12\">\n        <v-btn class=\"ma-2\" @click=\"readTag\" :disabled=\"!connected\">\n          Read tag\n        </v-btn>\n        <v-btn class=\"ma-2\"  @click=\"writeTag\" :disabled=\"!connected\">\n          Write tag\n        </v-btn>\n        <br>\n        <v-btn class=\"ma-2\" @click=\"toggleSound\">\n          <v-icon>{{ soundIcon }}</v-icon>\n        </v-btn>\n        <br>\n        <p class=\"text-12\">{{ snackbarText }}</p>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script lang=\"ts\">\n/// <reference types=\"w3c-web-usb\" />\n/// <reference types=\"w3c-web-serial\" />\nimport { defineComponent, ref, computed } from 'vue';\nimport Pl2303WebUsbSerial from '@/composables/rfid/pl2303';\nimport RfidReader from '@/composables/rfid/Reader';\nimport Tag from '@/composables/rfid/Tag';\nimport { ComPort } from '@/composables/rfid/Interfaces';\nimport { CommTagError, NoTagError } from '@/composables/rfid/Errors';\n\nexport default defineComponent({\n  setup() {\n    const webUsbSupported = ref('usb' in navigator);\n    const webSerialSupported = ref('serial' in navigator);\n\n    const snackbar = ref(false);\n    const snackbarText = ref('');\n\n    const playSound = ref(false);\n    const toggleSound = () => {\n      playSound.value = !playSound.value;\n    };\n    const soundIcon = computed(() => (playSound.value ? 'mdi-bell' : 'mdi-bell-off'));\n\n    let rfid: RfidReader;\n    const connected = ref(false);\n    const tag = ref(new Tag());\n    const connectedString = computed(() => (connected.value ? 'Connected' : 'Not connected'));\n\n    const connect = async (port: ComPort): Promise<void> => {\n      rfid = new RfidReader(port);\n      await rfid.connect();\n      connected.value = rfid.isConnected;\n    };\n\n    const disconnect = async () => {\n      await rfid.disconnect();\n      connected.value = false;\n    };\n\n    const connectUsb = async (): Promise<void> => {\n      try {\n        const device = await navigator.usb.requestDevice(\n          { filters: [{ vendorId: RfidReader.vendorId, productId: RfidReader.productId }] },\n        );\n        const port = new Pl2303WebUsbSerial(device);\n        await connect(port);\n      } catch (e) {\n        if (e.code === 8) { // No device selected\n          console.error(e.message);\n          return;\n        }\n        if (e.code === 19) { // Unable to claim interface\n          console.error(e.message);\n          return;\n        }\n        console.error(e.code, e.name, e.message);\n        throw e;\n      }\n      navigator.usb.addEventListener('disconnect', disconnect);\n    };\n\n    const connectSerial = async () => {\n      try {\n        const port = await navigator.serial.requestPort(\n          { filters: [{ usbVendorId: RfidReader.vendorId, usbProductId: RfidReader.productId }] },\n        );\n        connect(port);\n        port.addEventListener('disconnect', disconnect);\n      } catch (e) {\n        if (e instanceof DOMException && e.code === 8) { // No port selected by the user\n          console.error(e.message);\n          return;\n        }\n        throw e;\n      }\n    };\n\n    const readTag = async () => {\n      try {\n        tag.value = await rfid.readTag(playSound.value);\n        snackbar.value = false;\n        snackbarText.value = '';\n      } catch (e) {\n        if (e instanceof NoTagError) {\n          snackbar.value = true;\n          snackbarText.value = 'No tag detected';\n          return;\n        }\n        if (e instanceof CommTagError) {\n          snackbar.value = true;\n          snackbarText.value = 'Tag communication error';\n        }\n      }\n    };\n\n    const writeTag = async () => {\n      await rfid.writeTag(tag.value, playSound.value);\n    };\n\n    return {\n      connectedString,\n      connected,\n      playSound,\n      soundIcon,\n      tag,\n      webUsbSupported,\n      webSerialSupported,\n      snackbar,\n      snackbarText,\n      readTag,\n      toggleSound,\n      writeTag,\n      connectSerial,\n      connectUsb,\n      disconnect,\n    };\n  },\n});\n</script>\n","/* eslint-disable no-shadow */\nexport const enum LedColor {\n    NONE = 0x00,\n    RED = 0x01,\n    GREEN = 0x02,\n}\n\nexport const enum ReturnStatus {\n    OK = 0x00,\n    NoToken = 0x01,\n    CommError = 0x02,\n    CommError2 = 0x03,\n}\n\nexport interface ComPort {\n    open: (options: {baudRate: number}) => Promise<void>;\n    writable: WritableStream<Uint8Array> | null;\n    readable: ReadableStream<Uint8Array> | null;\n    close: () => Promise<void>;\n  }\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable max-classes-per-file */\n/* eslint no-use-before-define: [\"error\", { \"classes\": false }] */\n/*\n * Copyright for portions of usbserial are held by Andreas Gal (2017) as part\n * of pl2303. Based on pl2303 by Tidepool Project (2018). Copyright of additional\n * changes are held by Folleon GmbH.\n *\n * Prolific PL2303 user-space USB driver for WebUSB.\n *\n * SPDX-License-Identifier: MIT\n */\n/// <reference types=\"w3c-web-usb\" />\n\nimport { ComPort } from './Interfaces';\n\nclass Pl2303UnderlyingSink implements UnderlyingSink<Uint8Array> {\n  // eslint-disable-next-line no-use-before-define\n  private device_: Pl2303WebUsbSerial;\n\n  private onError_: () => void;\n\n  constructor(device: Pl2303WebUsbSerial, onError: () => void) {\n    this.device_ = device;\n    this.onError_ = onError;\n  }\n\n  async write(\n    chunk: Uint8Array,\n    controller: WritableStreamDefaultController,\n  ): Promise<void> {\n    try {\n      const result = await this.device_.send(chunk);\n      if (result.status !== 'ok') {\n        controller.error(result.status);\n        this.onError_();\n      }\n    } catch (error) {\n      controller.error(error.toString());\n      this.onError_();\n    }\n  }\n}\n\nclass Pl2303UnderlyingSource implements UnderlyingSource<Uint8Array> {\n  // eslint-disable-next-line no-use-before-define\n  private device_: Pl2303WebUsbSerial;\n\n  private onError_: () => void;\n\n  constructor(device: Pl2303WebUsbSerial, onError: () => void) {\n    this.device_ = device;\n    this.onError_ = onError;\n  }\n\n  pull(controller: ReadableStreamDefaultController<Uint8Array>): void {\n    (async (): Promise<void> => {\n      try {\n        const result = await this.device_.read(255);\n        if (result.status !== 'ok') {\n          controller.error(`USB error: ${result.status}`);\n          this.onError_();\n        }\n        if (result.data?.buffer) {\n          const chunk = new Uint8Array(\n            result.data.buffer, result.data.byteOffset,\n            result.data.byteLength,\n          );\n          controller.enqueue(chunk);\n        }\n      } catch (error) {\n        controller.error(error.toString());\n        this.onError_();\n      }\n    })();\n  }\n}\n\nexport default class Pl2303WebUsbSerial implements ComPort {\n  device_: USBDevice;\n\n  readable_: ReadableStream<Uint8Array> | null = null;\n\n  writable_: WritableStream<Uint8Array> | null = null;\n\n  constructor(device: USBDevice) {\n    this.device_ = device;\n  }\n\n  public get readable(): ReadableStream<Uint8Array> | null {\n    if (!this.readable_ && this.device_.opened) {\n      this.readable_ = new ReadableStream<Uint8Array>(\n        new Pl2303UnderlyingSource(this, () => { this.readable_ = null; }),\n      );\n    }\n    return this.readable_;\n  }\n\n  public get writable(): WritableStream<Uint8Array> | null {\n    if (!this.writable_ && this.device_.opened) {\n      this.writable_ = new WritableStream(\n        new Pl2303UnderlyingSink(\n          this,\n          () => { this.writable_ = null; },\n        ),\n      );\n    }\n    return this.writable_;\n  }\n\n  async open({ baudRate = 38400 }: { baudRate: number }) : Promise<void> {\n    await this.device_.open();\n    await this.device_.selectConfiguration(1);\n    if (this.device_.configuration === undefined) throw new Error('error');\n    await this.device_.claimInterface(\n      this.device_.configuration.interfaces[0].interfaceNumber,\n    );\n\n    await this.vendorRead(0x8484, 0);\n    await this.vendorWrite(0x0404, 0);\n    await this.vendorRead(0x8484, 0);\n    await this.vendorRead(0x8383, 0);\n    await this.vendorRead(0x8484, 0);\n    await this.vendorWrite(0x0404, 1);\n    await this.vendorRead(0x8484, 0);\n    await this.vendorRead(0x8383, 0);\n    await this.vendorWrite(0, 1);\n    await this.vendorWrite(1, 0);\n    await this.vendorWrite(2, 0x44);\n    await this.setBaudRate(baudRate);\n    await this.vendorWrite(0x0, 0x0); // no flow control\n    await this.vendorWrite(8, 0); // reset upstream data pipes\n    await this.vendorWrite(9, 0);\n  }\n\n  async setBaudRate(baudRate: number): Promise<void> {\n    const currentConfiguration = await this.device_.controlTransferIn(\n      {\n        recipient: 'interface',\n        requestType: 'class',\n        request: 0x21, // get configuration command\n        value: 0,\n        index: 0,\n      },\n      7, // read 7 bytes\n    );\n\n    if (currentConfiguration.data === undefined) throw new Error('error');\n    const baudRateConfiguration = new DataView(\n      currentConfiguration.data.buffer,\n    );\n    baudRateConfiguration.setInt32(0, baudRate, true); // baud rate, little-endian\n    baudRateConfiguration.setInt8(4, 0); // 1 stop bit\n    baudRateConfiguration.setInt8(5, 0); // no parity\n    baudRateConfiguration.setInt8(6, 8); // 8 bit characters\n\n    await this.device_.controlTransferOut(\n      {\n        recipient: 'interface',\n        requestType: 'class',\n        request: 0x20, // configuration command\n        value: 0,\n        index: 0,\n      },\n      baudRateConfiguration.buffer,\n    );\n  }\n\n  async vendorRead(value: number, index: number): Promise<USBInTransferResult> {\n    return this.device_.controlTransferIn(\n      {\n        requestType: 'vendor',\n        recipient: 'device',\n        request: 0x01,\n        value,\n        index,\n      },\n      1,\n    );\n  }\n\n  async vendorWrite(value: number, index: number): Promise<USBOutTransferResult> {\n    return this.device_.controlTransferOut({\n      requestType: 'vendor',\n      recipient: 'device',\n      request: 0x01,\n      value,\n      index,\n    });\n  }\n\n  async read(numberOfBytes: number, endpointNumber = 3): Promise<USBInTransferResult> {\n    return this.device_.transferIn(endpointNumber, numberOfBytes);\n  }\n\n  async send(dataAsBytes: BufferSource, endpointNumber = 2): Promise<USBOutTransferResult> {\n    return this.device_.transferOut(endpointNumber, dataAsBytes);\n  }\n\n  async close(): Promise<void> {\n    return this.device_.close();\n  }\n}\n","/* eslint-disable max-classes-per-file */\nexport class RFIDError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'RFIDError';\n  }\n}\n\nexport class IOError extends RFIDError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IOError';\n  }\n}\n\nexport class ChecksumError extends RFIDError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChecksumError';\n  }\n}\n\nexport class TagError extends RFIDError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TagError';\n  }\n}\n\nexport class NoTagError extends TagError {\n  constructor(message = 'No tag present') {\n    super(message);\n    this.name = 'NoTagError';\n  }\n}\n\nexport class CommTagError extends TagError {\n  constructor(message = 'Error communicating with tag') {\n    super(message);\n    this.name = 'CommTagError';\n  }\n}\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-bitwise */\n/* eslint-disable max-classes-per-file */\n\n// import RfidIOError from './Errors';\nimport { LedColor, ReturnStatus } from './Interfaces';\nimport Tag from './Tag';\n\nexport class RfidResponse {\n  opCode: Uint8Array;\n\n  status: ReturnStatus;\n\n  data: Uint8Array;\n\n  constructor(opCode: Uint8Array, status: number, data: Uint8Array) {\n    this.opCode = opCode;\n    this.status = status;\n    this.data = data;\n  }\n}\n\nexport abstract class RFIDFrame {\n  name: string;\n\n  private opCode: Uint8Array;\n\n  private requestData: Uint8Array = new Uint8Array();\n\n  constructor(name: string, opCode: Array<number>, data: Array<number> = []) {\n    this.name = name;\n    this.opCode = new Uint8Array(opCode);\n    this.requestData = new Uint8Array(data);\n  }\n\n  static checksum(v: Uint8Array): number {\n    return v.reduce((prev, curr) => prev ^ curr, 0);\n  }\n\n  public frame() : Uint8Array {\n    const buffer = new Uint8Array(255);\n    buffer.set(this.opCode);\n    let i = 2;\n    for (let j = 0; j < this.requestData.length; j++) {\n      const byte = this.requestData[j];\n      buffer[i++] = byte;\n      if (byte === 0xAA) {\n        buffer[i++] = 0xAA;\n      }\n    }\n    buffer[i++] = RFIDFrame.checksum(buffer.slice(0, i));\n    return buffer.slice(0, i);\n  }\n}\n\n/**\n * Class representing the request model info command.\n */\nexport class ModelInfo extends RFIDFrame {\n  constructor() {\n    super('Model info', [0x01, 0x02]);\n  }\n}\n\n/**\n * Class representing the beep command.\n */\nexport class Beep extends RFIDFrame {\n  /**\n   * @param duration - Duration of beep between 0 and 255, where 0 is continuously.\n   */\n  constructor(duration = 5) {\n    if (duration > 255 || duration < 0) {\n      throw new RangeError(`Duration must be between 0 and 255. Was ${duration}.`);\n    }\n    super('Beep', [0x01, 0x03], [duration]);\n  }\n}\n\n/**\n * Class representing a request to set LED color\n */\nexport class SetLedColor extends RFIDFrame {\n  /**\n   * @param color - set color\n   */\n  constructor(color: LedColor) {\n    super('Set led color', [0x01, 0x04], [color]);\n  }\n}\n\n/**\n * Class representing request to read tag.\n */\nexport class ReadTag extends RFIDFrame {\n  constructor() {\n    super('Read tag', [0x01, 0x0C]);\n  }\n}\n\n/**\n * Abstract class for request to write tag.\n */\nabstract class WriteTag extends RFIDFrame {\n  private tag: Tag;\n\n  private locked: boolean;\n\n  constructor(name: string, tag: Tag, opcode: Array<number>, locked = false) {\n    const lock = locked ? 0x01 : 0x00;\n    super(name, opcode, [lock, ...tag.tag()]);\n    this.tag = tag;\n    this.locked = locked;\n  }\n}\n\n/**\n * Class to represent first tag write method.\n */\nexport class WriteTag2 extends WriteTag {\n  /**\n   * @param tag - tag to write\n   * @param locked - make tag to read only\n   */\n  constructor(tag: Tag, locked = false) {\n    super('Write tag 2', tag, [0x02, 0x0C], locked);\n  }\n}\n\n/**\n * Class to represent second tag write method.\n */\nexport class WriteTag3 extends WriteTag {\n  /**\n   * @param tag - tag to write\n   * @param locked - make tag to read only\n   */\n  constructor(tag: Tag, locked = false) {\n    super('Write tag 3', tag, [0x03, 0x0C], locked);\n  }\n}\n","/* eslint-disable no-plusplus */\n/* eslint-disable max-classes-per-file */\n\nimport { RfidResponse } from './Comands';\nimport { IOError, ChecksumError } from './Errors';\n\n/**\n * Class to transform complete frames of data to `RfidResponse`\n */\nexport class FrameToData extends TransformStream<Uint8Array> {\n  // eslint-disable-next-line class-methods-use-this\n  transform(\n    chunk: Uint8Array,\n    controller: TransformStreamDefaultController,\n  ): void {\n    const opCode = chunk.slice(0, 2);\n    const status = chunk[2];\n    const data = chunk.slice(3, -1);\n    // eslint-disable-next-line no-bitwise\n    if (chunk.reduce((prev, curr) => prev ^ curr, 0) !== 0) {\n      throw new ChecksumError('Got the wrong checksum');\n    }\n    const response = new RfidResponse(opCode, status, data);\n    controller.enqueue(response);\n  }\n}\n\n/**\n * Class to transform raw serial data from rader to complete frames.\n */\nexport class SerialToFrame extends TransformStream<Uint8Array> {\n  private buffer = new Uint8Array(255)\n\n  private bufferPointer = 0;\n\n  private currentDataLength = -1\n\n  async transform(\n    chunk: Uint8Array,\n    controller: TransformStreamDefaultController<Uint8Array>,\n  ): Promise<void> {\n    // Save data to buffer\n    this.buffer.set(chunk, this.bufferPointer);\n    this.bufferPointer += chunk.length;\n\n    // Set cuurentDataLength if we have read at least 4 bytes\n    if (this.currentDataLength === -1 && this.bufferPointer >= 4) {\n      if (this.buffer[0] !== 0xAA || this.buffer[1] !== 0xDD) {\n        throw new IOError(`Message from reader does not start with [0xAA, 0xDD]. Got [${this.buffer.slice(0, 2)}`);\n      }\n      this.currentDataLength = 255 * this.buffer[2] + this.buffer[3] + 4;\n    }\n\n    if (this.currentDataLength !== -1 && this.bufferPointer >= this.currentDataLength) {\n      // We have read the complete dataframe,\n      // Replace [0xAA 0x00] with [0xAA].\n      const frame = [];\n      let j = 4;\n      while (j < this.currentDataLength) {\n        const byte = this.buffer[j++];\n        frame.push(byte);\n        if (byte === 0xAA && this.buffer[j] === 0x00) j++;\n      }\n      controller.enqueue(new Uint8Array(frame));\n\n      this.buffer.set(this.buffer.slice(this.currentDataLength));\n      this.buffer.fill(0, this.currentDataLength);\n      this.bufferPointer -= this.currentDataLength;\n      this.currentDataLength = -1;\n    }\n  }\n\n  flush(controller: TransformStreamDefaultController): void {\n    controller.enqueue(this.buffer.slice(0, this.bufferPointer));\n  }\n}\n\nexport class HexToBinaryTransformer extends TransformStream {\n  public static transform(chunk: string, controller: TransformStreamDefaultController): void {\n    const v = chunk.toUpperCase().match(/[0-9A-F]{1,2}/g)?.map(\n      (byte) => parseInt(byte, 16),\n    );\n    if (v !== undefined) controller.enqueue(Uint8Array.from(v));\n  }\n}\n\nexport class BinaryToHexTransformer extends TransformStream {\n  public static transform(\n    chunk: Uint8Array,\n    controller: TransformStreamDefaultController,\n  ): void {\n    const s = chunk.reduce(\n      (str: string, byte: number) => str + String(byte.toString(16).padStart(2, '0').toUpperCase()),\n      '',\n    );\n    controller.enqueue(s);\n  }\n}\n","import { TagError } from './Errors';\n\nexport default class Tag {\n  data: Array<number>;\n\n  constructor(tag: Array<number> | Uint8Array = [0x00, 0x00, 0x00, 0x00, 0x00]) {\n    if (tag.length !== 5) throw new TagError(`Wrong tag length. Expected 5, got ${tag.length}`);\n    this.data = Array.from(tag);\n  }\n\n  tag(): Array<number> {\n    return this.data.slice();\n  }\n\n  public get length() : number {\n    return this.data.length;\n  }\n\n  equals(tag: Tag): boolean {\n    return (\n      tag.length === this.length\n      && this.data.every((value, index) => value === tag.data[index])\n    );\n  }\n\n  toString(): string {\n    return this.data.reduce((s, byte) => `${s} ${byte.toString(16).padStart(2, '0')}`, '');\n  }\n}\n","export default class Semaphore {\n  /**\n   * Number of allocated resources\n   */\n  private counter = 0;\n\n  /**\n   * Queued processes\n   */\n  private waiting: Array<{\n    resolve: (value: void | PromiseLike<void>) => void,\n    err: (reason?: string) => void }> = [];\n\n  private max: number;\n\n  constructor(max = 1) {\n    this.max = max;\n  }\n\n  take(): void {\n    if (this.waiting.length > 0 && this.counter < this.max) {\n      this.counter += 1;\n      const promise = this.waiting.shift();\n      if (promise) promise.resolve();\n    }\n  }\n\n  acuire(): Promise<void> {\n    if (this.counter < this.max) {\n      this.counter += 1;\n      const promise = new Promise<void>((resolve) => { resolve(); });\n      return promise;\n    }\n    return new Promise<void>((resolve, err) => { this.waiting.push({ resolve, err }); });\n  }\n\n  release(): void {\n    this.counter -= 1;\n    this.take();\n  }\n\n  /**\n   * Purge all waiting processes.\n   * @returns number of purges processes\n   */\n  purge(): number {\n    const unresolved = this.waiting.length;\n\n    this.waiting.forEach((promise) => {\n      promise.err('Task has been purged');\n    });\n    this.counter = 0;\n    this.waiting = [];\n\n    return unresolved;\n  }\n\n  async with<T>(cb: () => T): Promise<T> {\n    await this.acuire();\n    try {\n      return cb();\n    } finally {\n      this.release();\n    }\n  }\n}\n","/* eslint-disable no-underscore-dangle */\n/// <reference types=\"w3c-web-serial\" />\nimport { CommTagError, NoTagError, RFIDError } from './Errors';\nimport { SerialToFrame, FrameToData } from './Transformers';\nimport { ComPort, LedColor, ReturnStatus } from './Interfaces';\nimport Tag from './Tag';\nimport {\n  RFIDFrame,\n  ModelInfo,\n  RfidResponse,\n  ReadTag,\n  SetLedColor,\n  Beep,\n  WriteTag2,\n  WriteTag3,\n} from './Comands';\nimport Semaphore from './Semaphore';\n\nexport default class RfidReader {\n  private port: ComPort;\n\n  private connected_ = false;\n\n  private writable_: WritableStream<Uint8Array> | null = null;\n\n  private readable_: ReadableStream<RfidResponse> | null = null;\n\n  private semaphore = new Semaphore(1);\n\n  private static baudRate = 38400;\n\n  static productId = 0x2303;\n\n  static vendorId = 0x067b;\n\n  constructor(port: ComPort) {\n    this.port = port;\n  }\n\n  public async connect(): Promise<void> {\n    try {\n      await this.port.open({ baudRate: RfidReader.baudRate });\n      const isValidReader = await this.validateReader();\n      if (isValidReader) {\n        this.connected_ = true;\n      } else {\n        throw new RFIDError('The reader is not the correct model.');\n      }\n    } catch (error) {\n      if (error instanceof DOMException) {\n        throw error;\n      }\n      console.error(error);\n      this.port.close();\n    }\n  }\n\n  public get isConnected(): boolean {\n    return this.connected_;\n  }\n\n  private get readable(): ReadableStream<RfidResponse> | null {\n    if (!this.readable_ && this.port.readable) {\n      this.readable_ = this.port.readable\n        .pipeThrough(new TransformStream(new SerialToFrame()))\n        .pipeThrough(new TransformStream(new FrameToData()));\n    }\n    return this.readable_;\n  }\n\n  private get writable(): WritableStream<Uint8Array> | null {\n    if (!this.writable_ && this.port.writable) {\n      this.writable_ = this.port.writable;\n    }\n    return this.writable_;\n  }\n\n  public async disconnect(): Promise<void> {\n    if (this.readable_) {\n      try {\n        await this.readable_.cancel('Disconnecting');\n      } catch (e) {\n        if (e instanceof DOMException && e.code === 19) {\n          console.error(e.message);\n        } else {\n          throw e;\n        }\n      }\n    }\n    if (this.writable_) {\n      try {\n        await this.writable_.abort('Disconnecting');\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    await this.port.close();\n    this.connected_ = false;\n  }\n\n  /**\n   * Set device led color\n   * @param color color\n   * @returns status code\n   */\n  private async setLedColor(color: LedColor): Promise<ReturnStatus> {\n    const { status } = await this.writeFrame(new SetLedColor(color));\n    return status;\n  }\n\n  /**\n   * Make device beep for approximately `time`/255 seconds.\n   * @param time beep time. 0 for continuously.\n   * @returns status code\n   */\n  private async beep(time: number): Promise<ReturnStatus> {\n    const { status } = await this.writeFrame(new Beep(time));\n    return status;\n  }\n\n  /**\n   * Read a tag from device.\n   * @param playSound play confirmation sound on device\n   * @returns tag\n   */\n  public async readTag(playSound = false) : Promise<Tag> {\n    const { status, data } = await this.writeFrame(new ReadTag());\n    switch (status) {\n      case ReturnStatus.OK:\n        await this.setLedColor(LedColor.GREEN);\n        if (playSound) await this.beep(5);\n        // setTimeout(async () => this.setLedColor(LedColor.NONE), 300);\n        return new Tag(data);\n      case ReturnStatus.NoToken:\n        await this.setLedColor(LedColor.RED);\n        if (playSound) await this.beep(20);\n        // setTimeout(async () => this.setLedColor(LedColor.NONE), 500);\n        throw new NoTagError();\n      default:\n        throw new CommTagError();\n    }\n  }\n\n  /**\n   * Write tag `tag`. Tries two different methods and reads the tag to confirm\n   * sucessful write.\n   * @param tag tag to write\n   * @param playSound play confirmation sound on device\n   */\n  public async writeTag(tag: Tag, playSound = false): Promise<void> {\n    let tagWritten;\n    let status;\n    ({ status } = await this.writeFrame(new WriteTag2(tag)));\n    if (status !== ReturnStatus.OK) throw new RFIDError('Error executing WriteTag2');\n    tagWritten = await this.readTag(false);\n    if (tagWritten.equals(tag)) {\n      await this.setLedColor(LedColor.GREEN);\n      if (playSound) await this.beep(5);\n      setInterval(() => this.setLedColor(LedColor.NONE), 1000);\n      return;\n    }\n    ({ status } = await this.writeFrame(new WriteTag3(tag)));\n    if (status !== ReturnStatus.OK) throw new RFIDError('WriteTag3');\n    tagWritten = await this.readTag(false);\n    if (tagWritten.equals(tag)) {\n      await this.setLedColor(LedColor.GREEN);\n      if (playSound) await this.beep(5);\n      setInterval(() => this.setLedColor(LedColor.NONE), 1000);\n      return;\n    }\n    await this.setLedColor(LedColor.RED);\n    if (playSound) await this.beep(20);\n    setInterval(() => this.setLedColor(LedColor.NONE), 1000);\n  }\n\n  /**\n   * Request model string from device.\n   * @returns model string\n   */\n  public async getModelInfo(): Promise<string> {\n    const { data } = await this.writeFrame(new ModelInfo());\n    return new TextDecoder().decode(data);\n  }\n\n  /**\n   * Write a frame to device.\n   * @param data Raw binary data to write.\n   */\n  private async writeRaw(data: Uint8Array): Promise<void> {\n    if (this.writable == null) throw new RFIDError('Writer is null');\n    const writer = this.writable.getWriter();\n    await writer.ready;\n    try {\n      await writer.write(Uint8Array.from(data));\n    } finally {\n      writer.releaseLock();\n    }\n  }\n\n  /**\n   * Read a frame from the device.\n   * @returns rfid response.\n   */\n  private async readRaw(): Promise<RfidResponse> {\n    if (this.readable == null) throw new RFIDError('reader is null');\n    const reader = this.readable.getReader();\n    try {\n      const { done, value } = await reader.read();\n      if (done || value === undefined) throw new RFIDError('Reader returned undefined value');\n      return value;\n    } finally {\n      reader.releaseLock();\n    }\n  }\n\n  /**\n   * Write frame to device and wait for resonse.\n   * Uses a semaphore to only queue writes before response has been read.\n   * @param frame Frame to write\n   * @returns Rfid response\n   */\n  public async writeFrame(frame: RFIDFrame): Promise<RfidResponse> {\n    return this.semaphore.with(async () => {\n      const f = frame.frame();\n      await this.writeRaw(Uint8Array.from([0xAA, 0xDD, 0x00, f.length, ...f]));\n      const value = await this.readRaw();\n      return value;\n    });\n  }\n\n  /**\n   * Validates the reader\n   * @returns A promise that resolves when the reader has been validated.\n   */\n  private async validateReader(): Promise<boolean> {\n    const id = await this.getModelInfo();\n    return (id === 'ID card reader & writer');\n  }\n}\n","\n/// <reference types=\"w3c-web-usb\" />\n/// <reference types=\"w3c-web-serial\" />\nimport { defineComponent, ref, computed } from 'vue';\nimport Pl2303WebUsbSerial from '@/composables/rfid/pl2303';\nimport RfidReader from '@/composables/rfid/Reader';\nimport Tag from '@/composables/rfid/Tag';\nimport { ComPort } from '@/composables/rfid/Interfaces';\nimport { CommTagError, NoTagError } from '@/composables/rfid/Errors';\n\nexport default defineComponent({\n  setup() {\n    const webUsbSupported = ref('usb' in navigator);\n    const webSerialSupported = ref('serial' in navigator);\n\n    const snackbar = ref(false);\n    const snackbarText = ref('');\n\n    const playSound = ref(false);\n    const toggleSound = () => {\n      playSound.value = !playSound.value;\n    };\n    const soundIcon = computed(() => (playSound.value ? 'mdi-bell' : 'mdi-bell-off'));\n\n    let rfid: RfidReader;\n    const connected = ref(false);\n    const tag = ref(new Tag());\n    const connectedString = computed(() => (connected.value ? 'Connected' : 'Not connected'));\n\n    const connect = async (port: ComPort): Promise<void> => {\n      rfid = new RfidReader(port);\n      await rfid.connect();\n      connected.value = rfid.isConnected;\n    };\n\n    const disconnect = async () => {\n      await rfid.disconnect();\n      connected.value = false;\n    };\n\n    const connectUsb = async (): Promise<void> => {\n      try {\n        const device = await navigator.usb.requestDevice(\n          { filters: [{ vendorId: RfidReader.vendorId, productId: RfidReader.productId }] },\n        );\n        const port = new Pl2303WebUsbSerial(device);\n        await connect(port);\n      } catch (e) {\n        if (e.code === 8) { // No device selected\n          console.error(e.message);\n          return;\n        }\n        if (e.code === 19) { // Unable to claim interface\n          console.error(e.message);\n          return;\n        }\n        console.error(e.code, e.name, e.message);\n        throw e;\n      }\n      navigator.usb.addEventListener('disconnect', disconnect);\n    };\n\n    const connectSerial = async () => {\n      try {\n        const port = await navigator.serial.requestPort(\n          { filters: [{ usbVendorId: RfidReader.vendorId, usbProductId: RfidReader.productId }] },\n        );\n        connect(port);\n        port.addEventListener('disconnect', disconnect);\n      } catch (e) {\n        if (e instanceof DOMException && e.code === 8) { // No port selected by the user\n          console.error(e.message);\n          return;\n        }\n        throw e;\n      }\n    };\n\n    const readTag = async () => {\n      try {\n        tag.value = await rfid.readTag(playSound.value);\n        snackbar.value = false;\n        snackbarText.value = '';\n      } catch (e) {\n        if (e instanceof NoTagError) {\n          snackbar.value = true;\n          snackbarText.value = 'No tag detected';\n          return;\n        }\n        if (e instanceof CommTagError) {\n          snackbar.value = true;\n          snackbarText.value = 'Tag communication error';\n        }\n      }\n    };\n\n    const writeTag = async () => {\n      await rfid.writeTag(tag.value, playSound.value);\n    };\n\n    return {\n      connectedString,\n      connected,\n      playSound,\n      soundIcon,\n      tag,\n      webUsbSupported,\n      webSerialSupported,\n      snackbar,\n      snackbarText,\n      readTag,\n      toggleSound,\n      writeTag,\n      connectSerial,\n      connectUsb,\n      disconnect,\n    };\n  },\n});\n","import { render } from \"./RfidReader.vue?vue&type=template&id=6f45184c\"\nimport script from \"./RfidReader.vue?vue&type=script&lang=ts\"\nexport * from \"./RfidReader.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { defineComponent } from 'vue';\nimport RfidReader from '@/components/RfidReader.vue';\n\nexport default defineComponent({\n  name: 'App',\n\n  components: {\n    RfidReader,\n  },\n\n  data() {\n    return {\n      //\n    };\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=36d71916\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue';\nimport vuetify from './plugins/vuetify';\nimport App from './App.vue';\n\ncreateApp(App)\n  .use(vuetify)\n  .mount('#app');\n"],"sourceRoot":""}